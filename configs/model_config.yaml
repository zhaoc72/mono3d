device: "cuda"
dtype: "float32"

dinov3:
  repo_or_dir: "/media/pc/D/zhaochen/mono3d/dinov3"
  model_name: "dinov3_vitl16"
  use_torch_hub: true
  torchhub_source: "local"
  checkpoint_path: "/media/pc/D/zhaochen/mono3d/dinov3/checkpoints/dinov3_vitl16_lvd1689m.pth"
  image_size: 448
  patch_size: 16

  output_layers: [4, 8, 12]
  layer_weights: [0.2, 0.3, 0.5]
  fusion_method: "weighted_sum"

  enable_pca: true
  pca_dim: 32

  enable_objectness: true
  objectness_smoothing_kernel: 3
  objectness_contrast_gamma: 0.7

  append_positional_features: true
  positional_feature_scale: 0.25

sam2:
  backend: "official"
  checkpoint_path: "/media/pc/D/zhaochen/mono3d/sam2/checkpoints/sam2.1_hiera_large.pt"
  model_config: "sam2.1/sam2.1_hiera_l"
  model_id: null
  revision: null
  load_in_8bit: false
  max_batch_size: 16
  mask_selection_strategy: "best_balanced"
  multimask_output: false

pipeline:
  area_threshold: 80
  kernel_size: 5
  dilation_radius: 0

  output_mask_format: "png"
  save_visualization: true
  visualization_alpha: 0.5

  enable_nms: true
  iou_threshold: 0.6
  objectness_weight: 0.6
  confidence_weight: 0.3
  area_weight: 0.1
  min_mask_objectness: 0.35
  min_mask_area: 120

  use_superpixels: true
  superpixel:
    method: "slic"
    n_segments: 1500
    compactness: 12.0
    sigma: 1.0
  auto_superpixel:
    enable: true
    min_proposals: 6
    min_clusters: 6
    max_mean_area_ratio: 0.3
    max_single_area_ratio: 0.6
    log_top_k: 5
  use_graph_clustering: false
  use_density_clustering: true
  density_cluster:
    method: "meanshift"
    min_cluster_size: 30
    min_samples: 10
    cluster_selection_epsilon: 0.0
    metric: "euclidean"
    allow_single_cluster: false

  crf:
    enable: true
    max_iterations: 5
    pos_w: 3.0
    pos_xy_std: 3.0
    bi_w: 4.0
    bi_xy_std: 80.0
    bi_rgb_std: 5.0

  cluster:
    clustering_method: "adaptive"
    num_clusters: 6
    min_clusters: 4
    max_clusters: 30
    cluster_selection_method: "silhouette"
    max_iterations: 40
    random_state: 0
    min_region_area: 100
    max_regions: 30
    min_instance_area: 80
    enable_instance_split: true
    max_instances_per_cluster: 12

    use_objectness_filter: true
    objectness_threshold: 0.35
    objectness_weight: 0.5
    apply_objectness_mask: true
    objectness_mask_threshold: 0.35
    objectness_min_keep_patches: 150
    objectness_percentile: 0.6
    objectness_min_std: 0.01
    objectness_dynamic_floor: 0.3

    use_connected_components: true
    min_component_area: 120
    foreground_only: true
    max_background_ratio: 0.8

    merge_small_clusters: true
    min_cluster_size: 30
    merge_similar_clusters: true
    similarity_threshold: 0.9
    min_similarity_cluster_size: 200
    merge_edge_background: true
    edge_background_area_ratio: 0.18
    edge_touch_ratio: 0.32

    hdbscan_min_cluster_size: 30
    hdbscan_min_samples: 10
    hdbscan_metric: "euclidean"
    hdbscan_allow_single_cluster: false
    hdbscan_cluster_selection_epsilon: 0.0

  proposal_refine:
    enable: true
    closing_kernel: 5
    opening_kernel: 3
    blur_sigma: 1.5
    blur_threshold: 0.45
    min_keep_area: 120

  prompt:
    include_boxes: false
    include_points: true
    include_masks: true
    include_heatmaps: false
    heatmap_weight: 0.4
    point_strategy: "density"
    max_points_per_region: 3
    min_positive_points: 3
    fallback_point_strategy: "centroid"
    density_noise_handling: "nearest"
    grid_points_per_side: 0
    log_top_k: 5
    mask_gaussian_sigma: 1.5
    density_cluster:
      method: "hdbscan"
      min_cluster_size: 20
      min_samples: 8
      cluster_selection_epsilon: 0.0
      metric: "euclidean"
      allow_single_cluster: false

reconstruction:
  output_directory: "outputs/recon_inputs"
  save_metadata: true
  metadata_keys: []
  mask_extension: ".npy"

# ========================================
# 类别感知配置 - 使用本地 adapters
# ========================================
class_aware:
  enable: null  # 自动启用（当两个 adapter 都配置时）
  detection_adapter:
    # 使用本地 src.adapters.detection 模块
    target: "src.adapters.detection:build_coco_adapter"
    checkpoint_path: "/media/pc/D/zhaochen/mono3d/dinov3/checkpoints/dinov3_vitl16_coco.pth"
    python_paths: []  # 不需要额外的 python paths，因为使用本地模块
    kwargs: {}
  segmentation_adapter:
    # 使用本地 src.adapters.segmentation 模块
    target: "src.adapters.segmentation:build_ade20k_adapter"
    checkpoint_path: "/media/pc/D/zhaochen/mono3d/dinov3/checkpoints/dinov3_vitl16_ade20k.pth"
    python_paths: []
    kwargs: {}
  prompt_fusion:
    objectness_threshold: 0.45
    segmentation_threshold: 0.4
    class_probability_threshold: 0.35
    detection_score_threshold: 0.25
    min_component_area: 60
    min_prompt_area: 60
    max_prompts_per_class: 10
    nms_iou_threshold: 0.6
    score_weights:
      det: 0.4
      seg: 0.4
      obj: 0.2
    include_mask_prompts: true
  prompt_postprocess:
    enable: true
    closing_kernel: 5
    opening_kernel: 3
    min_instance_area: 60
  foreground_class_ids: null  # null 表示自动检测所有前景类别
  background_class_ids: [0]  # ADE20K 的 background 类别